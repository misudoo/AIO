name: Automated Commit

on:
  schedule:
    - cron: '*/6 * * * *'

concurrency:
  group: timestamp-updater
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  update_commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Git
        run: |
          git config user.email "${{ github.repository_owner }}@users.noreply.github.com"
          git config user.name  "${{ github.repository_owner }}"

      - id: timestamp_update
        run: |
          today=$(date '+%Y-%m-%d')
          MAX=1000
          if [ -f DAILY_COMMIT_COUNT.txt ]; then
            read -r last_count last_date < DAILY_COMMIT_COUNT.txt
            [ "$last_date" = "$today" ] && count=$last_count || count=0
          else
            count=0
          fi
          if [ "$count" -ge "$MAX" ]; then
            echo "commit_skipped=true" >> $GITHUB_OUTPUT
          else
            count=$((count+1))
            echo "$count $today" > DAILY_COMMIT_COUNT.txt
            ts=$(date '+%Y-%m-%d %H:%M:%S')
            echo "Updated on $ts (Daily Commit #$count)" > TIMESTAMP.txt
            echo "current_time=$ts" >> $GITHUB_OUTPUT
            echo "commit_count=$count" >> $GITHUB_OUTPUT
            echo "commit_skipped=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit & Push  💾
        if: steps.timestamp_update.outputs.commit_skipped == 'false'
        run: |
          msgs=("Update ⏰" "Refresh 🔄" "Renew 🌟" "Revise 📝" "Amend 🛠" "Adjust 🔧" "Change 📈" "Modify 🖊" "Transform 🌀" "Revamp 🌈")
          msg=${msgs[$RANDOM % ${#msgs[@]}]}
          git add TIMESTAMP.txt DAILY_COMMIT_COUNT.txt
          git commit -m "[skip ci] $msg - Daily Commit #${{ steps.timestamp_update.outputs.commit_count }} at ${{ steps.timestamp_update.outputs.current_time }}"
          git push
